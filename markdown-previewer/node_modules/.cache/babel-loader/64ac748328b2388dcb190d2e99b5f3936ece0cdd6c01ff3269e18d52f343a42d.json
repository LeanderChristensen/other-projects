{"ast":null,"code":"import _classCallCheck from\"/Users/leander/Documents/projects/markdown-previewer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/leander/Documents/projects/markdown-previewer/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/leander/Documents/projects/markdown-previewer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/leander/Documents/projects/markdown-previewer/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/leander/Documents/projects/markdown-previewer/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import{marked}from'marked';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";marked.setOptions({breaks:true});var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={text:\"# Welcome to my React Markdown Previewer!\\n\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n\\nHere's some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n\\treturn multiLineCode;\\n  }\\n}\\n```\\n\\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.org), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | -------------\\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n\\t - With different indentation levels.\\n\\t\\t- That look like this.\\n\\n\\n1. And there are numbered lists too.\\n1. Use just 1s if you want!\\n1. And last but not least, let's not forget embedded images:\\n\\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\"};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"handleChange\",value:function handleChange(event){this.setState({text:event.target.value});}},{key:\"createMarkup\",value:function createMarkup(){return{__html:marked.parse(this.state.text)};}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"editorWrapper\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"editor\",rows:10,onChange:this.handleChange,value:this.state.text})}),/*#__PURE__*/_jsx(\"div\",{id:\"preview\",dangerouslySetInnerHTML:this.createMarkup()})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","marked","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","setOptions","breaks","App","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","text","handleChange","bind","_assertThisInitialized","_createClass","key","value","event","setState","target","createMarkup","__html","parse","render","children","id","className","rows","onChange","dangerouslySetInnerHTML","Component"],"sources":["/Users/leander/Documents/projects/markdown-previewer/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\ninterface AppState {\n\ttext: string;\n}\n\nmarked.setOptions({\n\tbreaks: true\n});\n\nclass App extends React.Component<{}, AppState> {\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttext: `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHere's some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n\treturn multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n\t - With different indentation levels.\n\t\t- That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)`\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n\t\tthis.setState({text: event.target.value });\n\t}\n\tcreateMarkup() {\n\t\treturn { __html: marked.parse(this.state.text) as string };\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div id=\"editorWrapper\">\n    \t\t\t\t<textarea className=\"form-control\" id=\"editor\" rows={10} onChange={this.handleChange} value={this.state.text}></textarea>\n\t\t\t\t</div>\n    \t\t\t<div id=\"preview\" dangerouslySetInnerHTML={this.createMarkup()}></div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n"],"mappings":"krBAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,QAAQ,CAC/B,MAAO,sCAAsC,CAC7C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAMnBN,MAAM,CAACO,UAAU,CAAC,CACjBC,MAAM,CAAE,IACT,CAAC,CAAC,CAAC,GAEG,CAAAC,GAAG,uBAAAC,gBAAA,EAAAC,SAAA,CAAAF,GAAA,CAAAC,gBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,GAAA,EACR,SAAAA,IAAYK,KAAS,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAP,GAAA,EACtBM,KAAA,CAAAH,MAAA,CAAAK,IAAA,MAAMH,KAAK,EACXC,KAAA,CAAKG,KAAK,CAAG,CACZC,IAAI,gpCA2CL,CAAC,CACDJ,KAAA,CAAKK,YAAY,CAAGL,KAAA,CAAKK,YAAY,CAACC,IAAI,CAAAC,sBAAA,CAAAP,KAAA,CAAK,CAAC,CAAC,OAAAA,KAAA,CAClD,CAACQ,YAAA,CAAAd,GAAA,GAAAe,GAAA,gBAAAC,KAAA,CACD,SAAAL,aAAaM,KAA6C,CAAE,CAC3D,IAAI,CAACC,QAAQ,CAAC,CAACR,IAAI,CAAEO,KAAK,CAACE,MAAM,CAACH,KAAM,CAAC,CAAC,CAC3C,CAAC,GAAAD,GAAA,gBAAAC,KAAA,CACD,SAAAI,aAAA,CAAe,CACd,MAAO,CAAEC,MAAM,CAAE9B,MAAM,CAAC+B,KAAK,CAAC,IAAI,CAACb,KAAK,CAACC,IAAI,CAAY,CAAC,CAC3D,CAAC,GAAAK,GAAA,UAAAC,KAAA,CACD,SAAAO,OAAA,CAAS,CACR,mBACC1B,KAAA,CAAAF,SAAA,EAAA6B,QAAA,eACC/B,IAAA,QAAKgC,EAAE,CAAC,eAAe,CAAAD,QAAA,cACnB/B,IAAA,aAAUiC,SAAS,CAAC,cAAc,CAACD,EAAE,CAAC,QAAQ,CAACE,IAAI,CAAE,EAAG,CAACC,QAAQ,CAAE,IAAI,CAACjB,YAAa,CAACK,KAAK,CAAE,IAAI,CAACP,KAAK,CAACC,IAAK,CAAW,CAAC,CACxH,CAAC,cACHjB,IAAA,QAAKgC,EAAE,CAAC,SAAS,CAACI,uBAAuB,CAAE,IAAI,CAACT,YAAY,CAAC,CAAE,CAAM,CAAC,EACxE,CAAC,CAEL,CAAC,WAAApB,GAAA,GAjEgBV,KAAK,CAACwC,SAAS,EAoEjC,cAAe,CAAA9B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}